{"version":3,"file":"dom_changes.8cf78ce5c4494f4850f2.js","mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kCAAkC,kBAAkB;;AAEpD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA,6BAA6B,2DAA2D,EAAE,0CAA0C;AACpI,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","sources":["webpack://bin2dec-app/./src/js/dom-changes.js"],"sourcesContent":["var fromSelect = document.querySelectorAll('#types')[0];\nvar toSelect = document.querySelectorAll('#types')[1];\n\nvar input = document.querySelector('#input');\nvar inputLabel = document.querySelector('#input-label');\n\nvar output = document.querySelector('#output');\nvar outputLabel = document.querySelector('#output-label');\n\nvar convertButton = document.querySelector('#convert-button');\nvar resetButton = document.querySelector('#reset-button');\n\n// Event listeners\n\nfromSelect.addEventListener('change', () => {\n  inputLabel.innerHTML = `Enter ${fromSelect.value} number`;\n\n  if (fromSelect.value === 'decimal') input.placeholder = 'Only numbers from 0 to 9';\n\n  if (fromSelect.value === 'binary') input.placeholder = 'Only numbers 0 and 1';\n\n  if (fromSelect.value === 'octal') input.placeholder = 'Only numbers from 0 to 7';\n\n  if (fromSelect.value === 'hexadecimal') input.placeholder = 'Only numbers from 0 to 9 and letters from \"a\" to \"e\" or \"A\" to \"E\"';\n\n  if (fromSelect.value === 'text') input.placeholder = 'Enter a text';\n\n  checkInput(input);\n});\n\ntoSelect.addEventListener('change', (e) => {\n  outputLabel.innerHTML = `${e.target.value[0].toUpperCase() + e.target.value.slice(1)} ${e.target.value === 'text' ? '' : 'number'}`;\n});\n\ninput.addEventListener('keyup', (e) => checkInput(e.target));\n\nconvertButton.onclick = () => outputConvertedNumber();\n\nresetButton.onclick = () => cleanInputAndOutput();\n\n// Funções auxiliares\n\nfunction checkInput(element) {\n  const target = element;\n  const val = element.value;\n\n  const setBackgroundAndButtonToNormalState = () => {\n    target.style.backgroundColor = '#fdfcfa';\n    convertButton.disabled = false;\n  };\n\n  if (fromSelect.value === 'decimal') {\n    if (!/^[0-9]+$/.test(val) && val.length > 0) {\n      target.style.backgroundColor = '#ff4c3033';\n      convertButton.disabled = true;\n    } else setBackgroundAndButtonToNormalState();\n  }\n\n  if (fromSelect.value === 'binary') {\n    if (!/^[0-1]+$/.test(val) && val.length > 0) {\n      target.style.backgroundColor = '#ff4c3033';\n      convertButton.disabled = true;\n    } else setBackgroundAndButtonToNormalState();\n  }\n\n  if (fromSelect.value === 'octal') {\n    if (!/^[0-7]+$/.test(val) && val.length > 0) {\n      target.style.backgroundColor = '#ff4c3033';\n      convertButton.disabled = true;\n    } else setBackgroundAndButtonToNormalState();\n  }\n\n  if (fromSelect.value === 'hexadecimal') {\n    if (!/^[0-9a-fA-F]+$/.test(val) && val.length > 0) {\n      target.style.backgroundColor = '#ff4c3033';\n      convertButton.disabled = true;\n    } else setBackgroundAndButtonToNormalState();\n  }\n\n  if (fromSelect.value === 'text') setBackgroundAndButtonToNormalState();\n}\n\n// Não funciona para números muito grandes, refazer usando\n// o algoritmo matemático\nfunction convertNumberBetweenBases(number, base1, base2) {\n  return parseInt(number, base1).toString(base2);\n}\n\nfunction convertNumberByBaseToText(number, base) {\n  return number\n    .split(' ')\n    .map((el) => String.fromCharCode(parseInt(el, base)))\n    .join('');\n}\n\nfunction convertTextToNumberByBase(text, base) {\n  return [...text].map((el) => el.charCodeAt(0).toString(base)).join(' ');\n}\n\nfunction outputConvertedNumber() {\n  const bases = {\n    types: ['decimal', 'binary', 'octal', 'hexadecimal'],\n    decimal: 10,\n    binary: 2,\n    octal: 8,\n    hexadecimal: 16,\n  };\n\n  const inputValue = input.value;\n\n  const fromSelectValue = fromSelect.value;\n  const toSelectValue = toSelect.value;\n\n  if (bases['types'].includes(fromSelectValue) && bases['types'].includes(toSelectValue) && inputValue)\n    output.innerHTML = convertNumberBetweenBases(inputValue, bases[fromSelectValue], bases[toSelectValue]);\n\n  if (fromSelectValue === 'text' && inputValue) output.innerHTML = convertTextToNumberByBase(inputValue, bases[toSelectValue]);\n\n  if (toSelectValue === 'text' && inputValue) output.innerHTML = convertNumberByBaseToText(inputValue, bases[fromSelectValue]);\n\n  if (toSelectValue === fromSelectValue) output.innerHTML = inputValue;\n\n  if (!inputValue) cleanInputAndOutput();\n}\n\nfunction cleanInputAndOutput() {\n  input.value = '';\n  output.value = '';\n\n  checkInput(input);\n}\n"],"names":[],"sourceRoot":""}